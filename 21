// VehicleManager.ts

class Vehicle {
  constructor(public id: number, public type: string, public brand: string) {}
}

class VehicleManager {
  private vehicles: Vehicle[] = [];

  addNewVehicleType(type: string) {
    // Check if the type already exists
    if (!this.vehicles.some((vehicle) => vehicle.type === type)) {
      this.vehicles.push(new Vehicle(this.vehicles.length + 1, type, ''));
      console.log(`New vehicle type "${type}" added.`);
    } else {
      console.log(`Vehicle type "${type}" already exists.`);
    }
  }

  displayVehicleTypes() {
    console.log('Vehicle Types:');
    this.vehicles.forEach((vehicle) => {
      console.log(`ID: ${vehicle.id}, Type: ${vehicle.type}`);
    });
  }

  addVehicleDetails(id: number, type: string, brand: string) {
    const vehicle = this.vehicles.find((v) => v.id === id && v.type === type);
    if (vehicle) {
      vehicle.brand = brand;
      console.log(`Vehicle details updated: ID: ${id}, Type: ${type}, Brand: ${brand}`);
    } else {
      console.log('Vehicle not found. Please check the ID and type.');
    }
  }

  displayAllVehicleDetails() {
    console.log('All Vehicle Details:');
    this.vehicles.forEach((vehicle) => {
      console.log(`ID: ${vehicle.id}, Type: ${vehicle.type}, Brand: ${vehicle.brand}`);
    });
  }
}

export default VehicleManager;
